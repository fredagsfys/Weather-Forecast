//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WeatherDbModel", "FK_Weather_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WeatherForecast.Models.Location), "Weather", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WeatherForecast.Models.Weather), true)]

#endregion

namespace WeatherForecast.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WeatherEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WeatherEntities object using the connection string found in the 'WeatherEntities' section of the application configuration file.
        /// </summary>
        public WeatherEntities() : base("name=WeatherEntities", "WeatherEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WeatherEntities object.
        /// </summary>
        public WeatherEntities(string connectionString) : base(connectionString, "WeatherEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WeatherEntities object.
        /// </summary>
        public WeatherEntities(EntityConnection connection) : base(connection, "WeatherEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Weather> Weathers
        {
            get
            {
                if ((_Weathers == null))
                {
                    _Weathers = base.CreateObjectSet<Weather>("Weathers");
                }
                return _Weathers;
            }
        }
        private ObjectSet<Weather> _Weathers;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Weathers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWeathers(Weather weather)
        {
            base.AddObject("Weathers", weather);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WeatherDbModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static Location CreateLocation(global::System.Int32 locationID, global::System.String city, global::System.String country)
        {
            Location location = new Location();
            location.LocationID = locationID;
            location.City = city;
            location.Country = country;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextUpdate
        {
            get
            {
                return _NextUpdate;
            }
            set
            {
                OnNextUpdateChanging(value);
                ReportPropertyChanging("NextUpdate");
                _NextUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextUpdate");
                OnNextUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextUpdate;
        partial void OnNextUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.String _Lat;
        partial void OnLatChanging(global::System.String value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lng
        {
            get
            {
                return _Lng;
            }
            set
            {
                OnLngChanging(value);
                ReportPropertyChanging("Lng");
                _Lng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lng");
                OnLngChanged();
            }
        }
        private global::System.String _Lng;
        partial void OnLngChanging(global::System.String value);
        partial void OnLngChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WeatherDbModel", "FK_Weather_Location", "Weather")]
        public EntityCollection<Weather> Weathers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Weather>("WeatherDbModel.FK_Weather_Location", "Weather");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Weather>("WeatherDbModel.FK_Weather_Location", "Weather", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WeatherDbModel", Name="Weather")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Weather : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Weather object.
        /// </summary>
        /// <param name="weatherID">Initial value of the WeatherID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="temp">Initial value of the Temp property.</param>
        public static Weather CreateWeather(global::System.Int32 weatherID, global::System.Int32 locationID, global::System.String symbol, global::System.String period, global::System.String time, global::System.String temp)
        {
            Weather weather = new Weather();
            weather.WeatherID = weatherID;
            weather.LocationID = locationID;
            weather.Symbol = symbol;
            weather.Period = period;
            weather.Time = time;
            weather.Temp = temp;
            return weather;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WeatherID
        {
            get
            {
                return _WeatherID;
            }
            set
            {
                if (_WeatherID != value)
                {
                    OnWeatherIDChanging(value);
                    ReportPropertyChanging("WeatherID");
                    _WeatherID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WeatherID");
                    OnWeatherIDChanged();
                }
            }
        }
        private global::System.Int32 _WeatherID;
        partial void OnWeatherIDChanging(global::System.Int32 value);
        partial void OnWeatherIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.String _Time;
        partial void OnTimeChanging(global::System.String value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Temp
        {
            get
            {
                return _Temp;
            }
            set
            {
                OnTempChanging(value);
                ReportPropertyChanging("Temp");
                _Temp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Temp");
                OnTempChanged();
            }
        }
        private global::System.String _Temp;
        partial void OnTempChanging(global::System.String value);
        partial void OnTempChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WeatherDbModel", "FK_Weather_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WeatherDbModel.FK_Weather_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WeatherDbModel.FK_Weather_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WeatherDbModel.FK_Weather_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WeatherDbModel.FK_Weather_Location", "Location", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
